1st Commit:

Created two files - parkingLot.java and parkingLotMain.java

Language Used and Reason - I wanted to start this project with either java or python as they
were both OOP languages that I was familiar with. I decided to choose java over python because
I had more experience with java OOP and Data structures and decided that if it starts to get
messy or complicated after 500+ lines of code I will rewrite what I have in python and continue
from there.

Progress - I have created the "back-end" file which is the parkingLot.java file to make a
parkingLot object. It is stored using a hashtable because a hashtable is a good data structure
for storing data, inserting, and deleting. It has one private field which is the hashtable and 
some methods such as parking and unparking at the lot, and getting the status of a parking lot
slot. The main file which is the parkingLotMain.java, utilizes the parkinglot object to then ask 
the user if they would like to park or unpark their "car" from one of the slots. 

Things to note - The scan type in the main file when asking which spot to park inis an int which 
right now, if the user enters any other data type the code breaks but if a front-end is added then 
they will only have a very specific choice to pick from and then all the other conditions in place 
to prevent the program from breaking can be removed as well. If the scan type needs to be fixed so 
that the program doesn't break at its current state then you can make the input type a string and then 
try parsing int which if done successfully, they entered a valid input and you can proceed to check the
rest of the conditions.

2nd Commit:

Documentation - Documented the constructor in the ParkingLot.java file to explain what the constructor does

Name Conventions - Class names are normally in upper camelcase and I wrote them as lower camelcase so I changed the
class names to follow the convention and to adjust everything else I changed the file names to match them and then
changed the constructor and modified line 8 in ParkingLotMain.java to construct the parkingLot object properly

3rd Commit:

QOL Changes - Previously the parking lot size was fixed to 10 in both the object file and main file but now it is
stored in a variable. I also made a get method that'll access the private variable and replaced all the fixed values of
10 with the get method so that if the "size" of the parking lot ever expands then you just have to change the value
of the variable to update everything else that uses it.

4th Commit:

This commit is all about Refactoring and Renaming Variables

Progress - Simplified the main file by removing many conditions that are now checked in the object file. Changed the 
object file to check for invalid options which is known as protecting the parameter. If an invalid option is provided,
then it will throw an exception saying that the input isn't valid and what the valid input is. What happened is known 
as Refactoring. I have also changed the variable names to be more specific for the purpose it is used for rather than
an obscure name such as 'x'. In programming the main file is supposed to be written by anyone that can use the parkingLot
library that I am writing and all exceptions are supposed to be handled in the library that is written. 

Notes - The exceptions that are currently in the object file should be coming from a separate file that contains illegal
values and throws specific error messages. This separate file for specifically exception handling and will most likely be
added in a future commit. Also need to study what inlining is and how it is resource effecient.

Future Commits - Adding an extraction method which is just to ensure readability and make it so that code blocks that are
repeated often are put in a method and instead that method is called.

5th Commit: